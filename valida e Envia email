  private bool DisparaEmail(string Assunto, string CorpoEmail,string EmalDestino)
  {

      try
      {
          EmailModel email = new EmailModel();
                  var mail = new MailMessage();
                  //de quem 
                  mail.From = new MailAddress(email.Srv_usuario);
                  //para quem
                  mail.To.Add(EmalDestino);
                  //conteudo
                  mail.Subject = Assunto;
                  mail.Body = CorpoEmail;
                  //smtp
                  var smtp = new SmtpClient(email.SrvSmtp, email.SrvPorta);
                  smtp.EnableSsl = true;
                  NetworkCredential cred = new NetworkCredential(email.Srv_usuario, email.SrvSenha);
                  smtp.Credentials = cred;
                  smtp.Send(mail);
                  mail.Dispose();
              return true;
      }
      catch
      {
          throw;
      }


  }


public bool PreparaEmail(string Assunto, string CorpoEmail)
     {
         EmailModel email = new EmailModel();
         try
         {
             string[] emails = email.EmalDestino.Split(';');
             foreach (string Destino in emails)
             {
                 if (this.ValidaEnderecoEmail(Destino))
                 {
                     DisparaEmail(Assunto, CorpoEmail, Destino);
                     Thread.Sleep(5000);
                 }
             }
             return true;
         }
         catch
         {
             throw;
         }
     }


          public bool ValidaEnderecoEmail(string enderecoEmail)
                 {
                     try
                     {
                         //define a expressão regulara para validar o email
                         string texto_Validar = enderecoEmail;
                         Regex expressaoRegex = new Regex(@"\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}");
                         // testa o email com a expressão
                         if (expressaoRegex.IsMatch(texto_Validar))
                         {
                             return true;
                         }
                         else
                         {
                             return false;
                         }
                     }
                     catch
                     {
                         throw;
                     }
                 }
